<template>
  <div class="killsec" v-show="visible">
    <div class="time">
      <span class="tip color-golden">距离{{killsecParams.process === 1 ? '开始' : '结束'}}</span>
      <span class="num font-color-white font-size--48" v-show="killsecParams.dates > 0">{{killsecParams.dates}}</span>
      <span class="unit font-size--20 jfk-d-ib font-color-light-gray" v-show="killsecParams.dates > 0">天</span>
      <span class="num font-color-white font-size--48">{{killsecParams.hours}}</span>
      <span class="unit font-size--20 jfk-d-ib font-color-light-gray">时</span>
      <span class="num font-color-white font-size--48">{{killsecParams.minutes}}</span>
      <span class="unit font-size--20 jfk-d-ib font-color-light-gray">分</span>
      <span class="num font-color-white font-size--48">{{killsecParams.seconds}}</span>
      <span class="unit font-size--20 jfk-d-ib font-color-light-gray">秒</span>
    </div>
    <div class="process"></div>
    <div class="number font-color-light-gray">
      <span class="tip jfk-d-ib font-size--22">剩余库存</span>
      <span class="stock font-size--24">{{killsecStock}}/</span>
      <span class="total jfk-d-ib font-size--20">{{killsecTotal}}</span>
    </div>
  </div>
</template>
<script>
  import KillsecTime from 'jfk-ui/lib/killsec-time'
  import stringLengthToTwo from 'jfk-ui/lib/string-length-to-two.js'
  import { getKillsecStock } from '@/service/http'
  export default {
    name: 'product-killsec',
    data () {
      return {
        interval: 0,
        visible: false,
        // 秒杀配置参数
        killsecTime: {},
        killsecParams: {
          dates: '0',
          hours: '00',
          minutes: '00',
          seconds: '00',
          process: 0
        },
        killsecStock: 0,
        killsecTotal: 0,
        showKillsecModule: false
      }
    },
    methods: {
      getKillsecStockInfo () {
        getKillsecStock({
          act_id: this.killsec.act_id
        }).then(function (res) {
          console.log(res)
        }).catch(function (err) {
          console.log(err)
        })
      },
      stopGetKillsecStock () {
        clearInterval(this.interval)
      }
    },
    created () {
      /* 1. 判断商品为秒杀
        2. 根据finish与end_time判断是否已结束
        3. 根据killsec_time判断是否已开始
        4. 秒杀开始后根据服务器返回间隔stock_reflesh_rate去ajax请求秒杀库存，库存为0，处理成秒杀已结束
      */
      let that = this
      const { finish, killsec_time, end_time, stock_reflesh_rate } = this.killsec
      let now = Date.now()
      let start = new Date(killsec_time).getTime()
      let end = new Date(end_time).getTime()
      if (!finish && now < end) {
        // 先执行一次获取库存
        that.getKillsecStockInfo()
        that.killsecTime = new KillsecTime({
          start,
          end,
          callback: function (type, val, ctx) {
            that.visible = true
            // 已结束
            if (ctx.process === 0) {
              that.visible = false
              ctx.close()
              that.stopGetKillsecStock()
              that.$emit('killsec-finish', false)
            }
            // 已开始
            if (ctx.process === 2) {
              that.stopGetKillsecStock()
              that.interval = setInterval(function () {
                that.getKillsecStockInfo()
              }, stock_reflesh_rate)
            }
            that.killsecParams = Object.assign({}, that.killsecParams, {
              dates: '' + ctx.dates,
              hours: stringLengthToTwo(ctx.hours),
              minutes: stringLengthToTwo(ctx.minutes),
              seconds: stringLengthToTwo(ctx.seconds),
              process: ctx.process
            })
          }
        })
      } else {
        that.$emit('killsec-finish', finish)
        that.visible = false
      }
    },
    props: {
      killsec: {
        type: Object,
        required: true
      }
    }
  }
</script>
