<template>
  <div class="logistics-wrap jfk-pages" v-loading.fullscreen.lock="fullscreenLoading" element-loading-text="正在下单至顺丰">
    <div class="provider">
      <el-row type="flex" align="middle" class="number">
        <el-col :span="2">
          <el-button type="primary" @click="order" :loading="btnLoading" size="small">下单至顺丰</el-button>
        </el-col>
        <el-col :span="4" :offset="1">
          <div class="current-order-list" v-html="currentNumber"></div>
        </el-col>
        <!--<el-col :span="12" :offset="1">-->
        <!--<el-switch></el-switch>-->
        <!--<span class="title">-->
        <!--<span class="main">自动下单</span>新邮寄订单全部通过顺丰下单-->
        <!--</span>-->
        <!--</el-col>-->
      </el-row>

      <el-row class="table-bottom">

        <el-form :model="form" :rules="rules" ref="form" :inline="true">


          <el-col :md="24" :lg="24">

            <el-form-item prop="startTime">
              <el-date-picker
                type="date"
                size="small"
                v-model="form.startTime"
                placeholder="请选择开始时间">
              </el-date-picker>
            </el-form-item>

            <el-form-item prop="endTime">
              <el-date-picker
                v-model="form.endTime"
                type="date"
                size="small"
                placeholder="请选择结束时间">
              </el-date-picker>
            </el-form-item>


            <el-form-item>
              <el-select placeholder="请选择状态" v-model="optionValue" clearable @change="statusChange" size="small">
                <el-option
                  v-for="item in options"
                  :key="item.value"
                  :label="item.label"
                  :value="item.value">
                </el-option>
              </el-select>
            </el-form-item>


            <el-form-item>
              <el-input v-model="keyword" placeholder="请输入编号，商品名称等" size="small"
                        class="search-input"></el-input>
            </el-form-item>


            <el-form-item>
              <el-button type="primary" icon="search" @click="search" size="small">查找</el-button>
            </el-form-item>

            <el-form-item style="float: right;margin-right: 0;">
              <el-button @click="exportOrderList" size="small">导出报表</el-button>
            </el-form-item>

          </el-col>


        </el-form>
      </el-row>

      <el-row class="table">
        <el-table ref="multipleTable"
                  v-loading="table_loading"
                  :data="express_logistics_list.list" border tooltip-effect="dark"
                  @selection-change="handleSelectionChange">

          <el-table-column width="55" type="selection" :selectable="selectable">
          </el-table-column>

          <el-table-column label="物流序号&提交时间" show-overflow-tooltip align="center" width="200px">
            <template scope="scope">
              <p v-html="scope.row.shipping_id"></p>
              <p v-html="scope.row.create_time"></p>
            </template>
          </el-table-column>

          <el-table-column prop="name" label="商品名称" width="120px" show-overflow-tooltip align="center">
          </el-table-column>

          <el-table-column prop="address" label="订单价格&数量" show-overflow-tooltip align="center" width="136px">
            <template scope="scope">
              <p v-html="scope.row.per_price"></p>
              <p v-html="scope.row.qty"></p>
            </template>
          </el-table-column>

          <el-table-column prop="address" label="订单号／订单实付" show-overflow-tooltip align="center" width="130px">
            <template scope="scope">
              <p v-html="scope.row.order_id"></p>
              <p v-html="scope.row.real_pay"></p>
            </template>
          </el-table-column>

          <el-table-column label="收件人&联系电话" show-overflow-tooltip align="center" width="130px">
            <template scope="scope">
              <p v-html="scope.row.contacts"></p>
              <p v-html="scope.row.phone" class="jfk-ta-c"></p>
            </template>
          </el-table-column>

          <el-table-column prop="address" label="地址" show-overflow-tooltip align="center" min-width="200px">
          </el-table-column>

          <el-table-column label="状态" width="115" show-overflow-tooltip align="center">
            <template scope="scope">
              <span v-if="scope.row.status === '1' ">邮寄申请</span>
              <span v-if="scope.row.status === '2' ">邮寄发货</span>
              <span v-if="scope.row.status === '3' ">已接受</span>
              <span v-if="scope.row.status === '4' ">异常挂起</span>
              <span v-if="scope.row.status === '5' ">已签收</span>
              <span v-if="scope.row.status === '6' ">待付运费</span>
              <span v-if="scope.row.status === '7' ">下单失败</span>
            </template>
          </el-table-column>

          <el-table-column prop="tracking_no" label="快递单号" width="115" show-overflow-tooltip align="center">
          </el-table-column>

        </el-table>
      </el-row>

      <el-row>
        <div class="pagination jfk-ta-c">
          <el-pagination
            @current-change="handleCurrentChange"
            :current-page="express_logistics_list.page_num"
            :page-size="express_logistics_list.page_size"
            layout="total, prev, pager, next, jumper"
            :total="express_logistics_list.total">
          </el-pagination>
        </div>
      </el-row>

    </div>
  </div>
</template>
<script>
  import { mapGetters, mapActions, mapMutations } from 'vuex'
  import { v1 } from '@/service/mall/api'
  import moment from 'moment'
  import { postExpressBatchCreateOrder } from '@/service/mall/http'
  export default {
    methods: {
      handleCurrentChange (val) {
        this.UPDATE_EXPRESS_PAGE_NUMBER(val)
        this.UPDATE_TABLE_LOADING(true)
        this.GET_EXPRESS_ORDER_LIST()
      },
      ...mapActions(['GET_EXPRESS_ORDER_LIST']),
      ...mapMutations(['UPDATE_EXPRESS_PAGE_NUMBER',
        'UPDATE_EXPRESS_TIME_RANGE',
        'UPDATE_EXPRESS_KEYWORD',
        'UPDATE_EXPRESS_STATUS',
        'UPDATE_TABLE_LOADING']),
      selectable (row) {
        let bol = false
        if (row['status'] === '1' || row['status'] === '7' || row['status'] === '4') {
          bol = true
        }
        return bol
      },
      statusChange (val) {
        this.UPDATE_EXPRESS_STATUS(val)
      },
      handleSelectionChange (val) {
        this.multipleSelection = val
        this.currentOrderNumber()
      },
      currentOrderNumber () {
        if (this.current_order_total === 0) {
          return false
        }
        this.remaining = this.current_order_total - this.multipleSelection.length
        if (this.remaining <= 0) {
          this.remaining = 0
        }
        this.currentNumber = `本页已选${this.multipleSelection.length}选单，剩余${this.remaining}单`
      },
      exportOrderList () {
        const data = {
          begin_time: this.express_logistics_list['begin_time'],
          end_time: this.express_logistics_list['end_time'],
          like: this.express_logistics_list['keyword'],
          status: this.express_logistics_list['status'],
          type: '2'
        }
        const url = v1.GET_EXPRESS_EXPORT_ORDER_LIST + `?begin_time=${data.begin_time}&end_time=${data.end_time}&like=${data.like}&status=${data.status}&type=${data.type}`
        window.open(url)
      },
      search () {
        this.$refs['form'].validate((valid) => {
          if (valid) {
            this.UPDATE_TABLE_LOADING(true)
            this.UPDATE_EXPRESS_KEYWORD(this.keyword)
            this.UPDATE_EXPRESS_PAGE_NUMBER(1)
            let startTime = ''
            let endTime = ''
            if (this.form.startTime !== '') {
              startTime = moment(this.form.startTime).format('YYYY-MM-DD')
            }
            if (this.form.endTime !== '') {
              endTime = moment(this.form.endTime).format('YYYY-MM-DD')
            }
            this.UPDATE_EXPRESS_TIME_RANGE({
              'begin_time': startTime,
              'end_time': endTime
            })
            this.GET_EXPRESS_ORDER_LIST()
            this.currentOrderNumber()
          }
        })
      },
      order () {
        if (this.multipleSelection.length === 0) {
          this.$alert('请选择需要下单的订单', '温馨提示', {
            confirmButtonText: '确定',
            callback: action => {
            }
          })
        } else {
          let shoppingArray = []
          for (let i = 0; i < this.multipleSelection.length; i++) {
            shoppingArray.push(this.multipleSelection[i]['shipping_id'])
          }
          let data = {'shipping_id': shoppingArray.join(',')}
          const csrf = this.express_logistics_list['csrf']
          data[csrf['csrf_token']] = csrf['csrf_value']
          this.btnLoading = true
          this.fullscreenLoading = true
          postExpressBatchCreateOrder(data, {REJECTERRORCONFIG: {serveError: true}}).then((res) => {
            this.btnLoading = false
            this.fullscreenLoading = false
            this.$alert(`选择${this.multipleSelection.length}单下单到顺丰，成功${this.multipleSelection.length}单，失败0单，失败订单可手动推送`, '温馨提示', {
              confirmButtonText: '确定',
              callback: action => {
                this.GET_EXPRESS_ORDER_LIST()
              }
            })
          }).catch((res) => {
            this.fullscreenLoading = false
            this.btnLoading = false
            if (res.status === 1001) {
              let arr = []
              for (let key in res.web_data) {
                arr.push(key)
              }
              console.log(arr.length)
              this.$alert(`选择${this.multipleSelection.length}单下单到顺丰，成功${this.multipleSelection.length - arr.length}单，失败${arr.length}单，失败订单可手动推送`, '温馨提示', {
                confirmButtonText: '确定',
                callback: action => {
                  this.GET_EXPRESS_ORDER_LIST()
                }
              })
            } else {
              this.$notify({
                type: 'error',
                title: '温馨提示',
                customClass: 'jfk-notification--center',
                message: res['msg']
              })
            }
          })
        }
      }
    },
    created () {
      this.UPDATE_TABLE_LOADING(true)
      this.GET_EXPRESS_ORDER_LIST()
      this.currentOrderNumber()
    },
    computed: {
      ...mapGetters(['express_logistics_list', 'table_loading', 'current_order_total'])
    },
    watch: {
      current_order_total (val) {
        if (val) {
          this.currentOrderNumber()
        }
      }
    },
    data () {
      const validateEndDate = (rule, value, callback) => {
        if (this.form.startTime !== '' && value !== '') {
          if (moment(this.form.startTime).valueOf() > moment(value).valueOf()) {
            callback(new Error('结束时间不小于开始时间'))
          } else {
            callback()
          }
        } else {
          callback()
        }
      }
      const validateStartDate = (rule, value, callback) => {
        if (this.form.startTime !== '' && value !== '') {
          if (moment(this.form.startTime).valueOf() > moment(this.form.endTime).valueOf()) {
            callback(new Error('开始时间不大于结束时间'))
          } else {
            callback()
          }
        } else {
          callback()
        }
      }
      return {
        fullscreenLoading: false,
        rules: {
          endTime: [{
            validator: validateEndDate, trigger: 'change'
          }],
          startTime: [{
            validator: validateStartDate, trigger: 'change'
          }]
        },
        form: {
          startTime: '',
          endTime: ''
        },
        currentNumber: '',
        remaining: 0,
        totalNumber: 50,
        multipleSelection: [],
        value: '',
        keyword: '',
        btnLoading: false,
        currentPage: 1,
        optionValue: '',
        options: [
          {'label': '邮寄申请', 'value': '1'},
          {'label': '邮寄发货', 'value': '2'},
          {'label': '已接受', 'value': '3'},
          {'label': '异常挂起', 'value': '4'},
          {'label': '已签收', 'value': '5'},
          {'label': '待付运费', 'value': '6'},
          {'label': '下单失败', 'value': '7'}
        ]
      }
    }
  }
</script>
<style lang="postcss" scoped>
  .logistics-wrap {

    &.jfk-pages {

      .table-bottom {
        margin-bottom: 10px;
      }

      .search-input {
        width: 260px;
      }

      .el-row {
        font-size: 0;
      }

      .el-col {
        font-size: 0;
      }

      .el-form-item {
        margin-right: 20px;
      }

      .current-order-list {
        font-size: 12px;
      }

      .post-wrap {
        .jfk-container {
          padding: 15px 20px;
        }
        .el-autocomplete {
          width: 100%;
        }
        .delivery-btn {
          margin-left: 120px;
          text-align: center;
        }
      }

      .pagination {
        width: 100%;
        margin-top: 20px;
      }

      .number {
        margin-bottom: 20px;
      }

      .el-pagination {
        display: inline-block;
      }

      .title {
        font-size: 12px;
        color: #333;
        margin-left: 12px;
        display: inline-block;
        height: 22px;
        line-height: 22px;
        .main {
          font-size: 14px;
          margin-right: 6px;
        }
      }
    }
  }
</style>

