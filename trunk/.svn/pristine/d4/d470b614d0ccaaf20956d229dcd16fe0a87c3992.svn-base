<template>
  <div class="killsec-box" v-show="visible">
    <div class="killsec">
    <div class="layer">
    </div>
    <div class="box jfk-flex is-align-middle">
      <div class="cont">
        <div class="time">
          <span class="tip jfk-d-ib color-golden font-size--24">距离{{killsecParams.process === 1 ? '开始' : '结束'}}</span>
          <span class="clock jfk-d-ib">
            <i :class="numClass" class="num jfk-d-ib font-color-white date" v-show="killsecParams.dates > 0">{{killsecParams.dates}}</i>
            <i class="unit font-size--20 jfk-d-ib font-color-light-gray" v-show="killsecParams.dates > 0">天</i>
            <i :class="numClass" class="num jfk-d-ib font-color-white">{{killsecParams.hours}}</i>
            <i class="unit font-size--20 jfk-d-ib font-color-light-gray">时</i>
            <i :class="numClass" class="num jfk-d-ib font-color-white">{{killsecParams.minutes}}</i>
            <i class="unit font-size--20 jfk-d-ib font-color-light-gray">分</i>
            <i :class="numClass" class="num jfk-d-ib font-color-white">{{killsecParams.seconds}}</i>
            <i class="unit font-size--20 jfk-d-ib font-color-light-gray">秒</i>
          </span>
        </div>
        <div class="process">
          <div class="line" :style="{'width': killsecPercent}">
          </div>
        </div>
        <div class="number font-size--24 font-color-light-gray">
          <span class="tip jfk-d-ib font-size--22">剩余库存</span>
          <span class="stock jfk-d-ib">{{killsecStock}}/</span>
          <span class="total jfk-d-ib font-size--20">{{killsecTotal}}</span>
        </div>
      </div>
    </div>
    <div class="mask">
    </div>
    </div>
  </div>
</template>
<script>
  import KillsecTime from 'jfk-ui/lib/killsec-time'
  import stringLengthToTwo from 'jfk-ui/lib/string-length-to-two.js'
  import { getKillsecStock } from '@/service/http'
  export default {
    name: 'product-killsec',
    data () {
      return {
        interval: 0,
        visible: false,
        // 秒杀配置参数
        killsecTime: {},
        killsecParams: {
          dates: '0',
          hours: '00',
          minutes: '00',
          seconds: '00',
          process: 0
        },
        killsecStock: '0',
        killsecTotal: '0',
        killsecPercent: '0%',
        showKillsecModule: false
      }
    },
    computed: {
      numClass () {
        return this.killsecParams.dates < 10 ? 'font-size--48' : 'font-size--38'
      }
    },
    methods: {
      getKillsecStockInfo () {
        let that = this
        getKillsecStock({
          act_id: this.killsec.act_id
        }).then(function (res) {
          const { percent, stock, total } = res.web_data
          that.killsecStock = stock
          that.killsecTotal = total
          that.killsecPercent = 100 - percent + '%'
        }).catch(function () {
          // 如果报错，直接去掉后续的请求
          that.stopCycleGetKillsecStock()
          that.$emit('killsec-finish', 0)
          that.visible = false
          that.killsecTime.close && that.killsecTime.close()
        })
      },
      stopCycleGetKillsecStock () {
        clearInterval(this.interval)
      }
    },
    created () {
      /* 1. 判断商品为秒杀
        2. 根据finish与end_time判断是否已结束
        3. 根据killsec_time判断是否已开始
        4. 秒杀开始后根据服务器返回间隔stock_reflesh_rate去ajax请求秒杀库存，库存为0，处理成秒杀已结束
      */
      let that = this
      let { finish, killsec_time: killsecTime, end_time: endTime, stock_reflesh_rate } = this.killsec
      // 在ios中 new Date('2017-07-12 14:30:00')为Invalid Date
      killsecTime = killsecTime.replace(/-/g, '/')
      endTime = endTime.replace(/-/g, '/')
      let now = Date.now()
      let start = new Date(killsecTime).getTime()
      let end = new Date(endTime).getTime()
      let hasEmitStart = false
      if (!finish && now < end) {
        // 先执行一次获取库存
        that.getKillsecStockInfo()
        that.killsecTime = new KillsecTime({
          start,
          end,
          callback: function (type, val, ctx) {
            that.visible = true
            // 已结束
            if (ctx.process === 0) {
              that.visible = false
              ctx.close()
              that.stopCycleGetKillsecStock()
              that.$emit('killsec-finish', 2)
            }
            // 已开始
            if (ctx.process === 2) {
              // that.stopCycleGetKillsecStock()
              if (!hasEmitStart) {
                that.$emit('killsec-start', 1)
                hasEmitStart = true
                that.interval = setInterval(function () {
                  that.getKillsecStockInfo()
                }, stock_reflesh_rate)
              }
            }
            that.killsecParams = Object.assign({}, that.killsecParams, {
              dates: '' + ctx.dates,
              hours: stringLengthToTwo(ctx.hours),
              minutes: stringLengthToTwo(ctx.minutes),
              seconds: stringLengthToTwo(ctx.seconds),
              process: ctx.process
            })
          }
        })
      } else {
        that.$emit('killsec-finish', finish ? 1 : 2)
        that.visible = false
      }
    },
    props: {
      killsec: {
        type: Object,
        required: true
      }
    },
    beforeDestroy () {
      this.killsecTime.close && this.killsecTime.close()
    }
  }
</script>
