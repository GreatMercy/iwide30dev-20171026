<?php
use App\libraries\Iapi\FrontConst;

/**
 * Class Presents
 *
 *
 * 商品赠送相关接口
 *
 * @property Product_package_model $productPackageModel
 */
class Presents extends MY_Front_Soma_Iapi
{
    //http://local.iwide.com/iapi/soma/presents/package?aiid=6132&group=1&id=a450089706&bsn=package&send_from=1&send_order_id=1000011754&saler=29&openid=o9Vbtw1W0ke-eb0g6kE4SD1eh6qU

    /**
     * @SWG\Get(
     *     tags={"present"},
     *     path="/presents/package",
     *     summary="home products",
     *     description="return item info",
     *     operationId="get_package",
     *     produces={"application/json"},
     *     @SWG\Parameter(
     *         description="资产ID",
     *         in="query",
     *         name="aiid",
     *         required=true,
     *         type="integer"
     *     ),
     *     @SWG\Parameter(
     *         description="是否是群发，1是，2不是",
     *         in="query",
     *         name = "group",
     *         required=false,
     *         type="integer"
     *     ),
     *     @SWG\Parameter(
     *         description="公众号ID",
     *         in="query",
     *         name = "id",
     *         required=false,
     *         type="integer"
     *     ),
     *     @SWG\Parameter(
     *         description="业务类型，如package",
     *         in="query",
     *         name = "bsn",
     *         required=true,
     *         type="integer"
     *     ),
     *     @SWG\Parameter(
     *         description="1表示来自礼物",
     *         in="query",
     *         name = "send_from",
     *         required=false,
     *         type="integer"
     *     ),
     *     @SWG\Parameter(
     *         description="订单ID",
     *         in="query",
     *         name = "send_order_id",
     *         required=false,
     *         type="integer"
     *     ),
     *     @SWG\Response(
     *         response="200",
     *         description="successful operation",
     *         @SWG\Schema(
     *              type="object",
     *              @SWG\Property(
     *                  property="items",
     *                  description="资产列表",
     *                  type = "array",
     *                  @SWG\Items(ref="#/definitions/SomaGift")
     *              ),
     *              @SWG\Property(
     *                  property="ads",
     *                  description="广告 show_ads_cat=1时才显示",
     *                  type = "array",
     *                  @SWG\Items(ref="#/definitions/SomaAdv")
     *               ),
     *              @SWG\Property(
     *                  property="categories",
     *                  description="分类 show_ads_cat=1时才显示",
     *                  type = "array",
     *                  @SWG\Items(ref="#/definitions/SomaCate")
     *              ),
     *         )
     *     )
     * )
     */
    public function get_package()
    {

        $is_group= $this->input->get('group');
        $business= $this->input->get('bsn');

        $this->load->model('soma/Gift_order_model','giftOrderModel');
        $this->load->model('soma/Asset_item_package_model','assetItemModel');
        $asset_item_id= $this->input->get('aiid');
        $inter_id= $this->inter_id;
        $items= $this->assetItemModel->get_order_items_byItemids( array($asset_item_id), $business, $inter_id );
        $item_ids= $this->assetItemModel->array_to_hash($items, 'item_id' );

        //检查能否赠送
        $this->load->model("soma/Sales_order_model",'SalesOrderModel');
        $order_id = isset( $items[0]['order_id'] ) ? $items[0]['order_id'] : '';
        $SalesOrderModel = $this->SalesOrderModel->load( $order_id );
        if( $SalesOrderModel ){
            if( !$SalesOrderModel->can_gift_order() ){
                die($this->lang->line('can_not_gift_tip'));
            }
        }else{
            die('检查能否赠送失败，加载sales_order_model失败！');
        }

        if( count($items)==0 ){
            die('参数错误！');

        } elseif( $items[0]['openid'] != $this->openid ){
            //并非自己的资产不能处理
            die('无可赠送礼物');
        }
        //纠正发送方式
        if( $items[0]['qty']<2 ){
            $is_group= Soma_base::STATUS_FALSE;
        }
        if( !$is_group ){
            $is_group = Soma_base::STATUS_FALSE;//防止没有传group参数进来，而且剩余数量大于2
        }

        $time = time();
        $expireTime = isset( $items[0]['expiration_date'] ) ? strtotime( $items[0]['expiration_date'] ) : NULL;
        $is_expire = FALSE;
        if( $expireTime && $expireTime < $time ){
            $is_expire = TRUE;
            die('已经过期不能进行赠送！');
        }

        $giftTheme = array(
            //这些数据暂时是不可修改的，后台有上传功能，直接从数据库取
            //theme字段是暂时定义的，到时候在后台上传赠送主题，则不需要，直接使用背景图链接即可
            array('theme_id'=>1,'theme'=>'theme0.jpg','theme_name'=>$this->lang->line('featured')),
            // array('theme_id'=>2,'theme'=>'theme1.jpg','theme_name'=>'爱情'),
            // array('theme_id'=>3,'theme'=>'theme2.jpg','theme_name'=>'父母'),
            // array('theme_id'=>4,'theme'=>'theme3.jpg','theme_name'=>'长辈'),
            // array('theme_id'=>5,'theme'=>'theme4.jpg','theme_name'=>'亲人'),
            // array('theme_id'=>6,'theme'=>'theme5.jpg','theme_name'=>'朋友'),
            // array('theme_id'=>7,'theme'=>'theme6.jpg','theme_name'=>'精选'),
        );




        $this->load->helper('soma/package');



        $check_follow_ajax_url= Soma_const_url::inst()->get_url( '*/*/follow_status', array('id'=>$this->inter_id) );
        $returnData = array(
            'items'             => $items, //资产
            'item_ids'          => array_values($item_ids), //资产ID数组
            'item_model'        => $this->assetItemModel,
            'is_expire'         => $is_expire, //是否已经过期
            'is_group'          => $is_group, //是否群发
            'giftTheme'         => $giftTheme, //主题
            'check_follow_ajax' => $check_follow_ajax_url,         //是否关注的ajax请求
            'send_from'         => $this->input->get('send_from', true),
            'send_order_id'     => $this->input->get('send_order_id', true),
        );


//        $arr = new \App\libraries\Support\Collection($returnData);

//        print_r($arr->get('items'));exit;

        //$this->json(FrontConst::OPER_STATUS_SUCCESS, '', $returnData);
    }



    //检测是否关注
    public function get_follow_status(){
        $this->load->model('wx/publics_model');
        $userinfo= $this->publics_model->get_wxuser_info($this->inter_id, $this->openid );
        $result= array(
            'status'=> Soma_base::STATUS_TRUE,
            'message'=> '',
            'data'=> '',
        );
        $public= $this->publics_model->get_public_by_id($this->inter_id);
        $statis_url= $public['follow_page'];

        if( isset($userinfo['subscribe']) && $userinfo['subscribe']==0 ){
            //微信返回的信息显示没有关注
            $result['status']= 2;
            $result['message']= str_replace('[0]', $public['name'], $this->lang->line('follow_use'));
            $result['data']= $statis_url;

        } else {
            $result['message']= str_replace('[0]', $public['name'], $this->lang->line('use_gift_in_officaial_account_tip'));
            $result['data']= Soma_const_url::inst()->get_pacakge_home_page();
        }


        $this->json(FrontConst::OPER_STATUS_SUCCESS, '', $result);

    }


    /**
     * @author zhangyi  <zhangyi@mofly.cn>
     * send out a gift
     */
    public function post_send(){

        $return= array('status'=> Soma_base::STATUS_FALSE, 'message'=>'参数错误');

        $request_param = $this->input->input_json();

        var_dump($request_param);
        exit;
        $inter_id= $this->inter_id;
        $business= 'package';
        $aiids= $this->input->post('aiids'); //asset_item的需求量json数组
        $message= $this->input->post('msg'); //祝福语
        $theme_id= $this->input->post('tid'); //礼物主题ID
        $is_group= $this->input->post('is_group'); //是否是群发
        $count_give= (int) $this->input->post('count_give'); //收礼人数
        $per_give= (int) $this->input->post('per_give'); //发出礼盒数
        $total_qty= $per_give* $count_give;

        $send_from = $this->input->post('send_from');
        $send_order_id = $this->input->post('send_order_id');

        $item_ids= array_keys($aiids);
        $this->load->model('soma/Asset_item_package_model','assetItemModel');
        $items= $this->assetItemModel->get_order_items_byItemids( $item_ids, $business, $inter_id );

        if( !$items || $items[0]['qty']< $total_qty ){
            Soma_base::inst()->show_exception( '您的礼品数量不足！' );
        }
        foreach ($items as $k=>$v){
            if( $v['can_gift']== Asset_item_package_model::STATUS_CAN_NO )
                Soma_base::inst()->show_exception( $v['name']. '不允许赠送' );

            else if( in_array($v['item_id'], $item_ids) ){
                $items[$k]['qty_require']= $aiids[$v['item_id']];
            }
        }
        //print_r($items);die;
        $this->load->model('soma/Gift_order_model','giftOrderModel');
        $this->giftOrderModel->is_p2p= ( $is_group== Soma_base::STATUS_TRUE )? Soma_base::STATUS_FALSE: Soma_base::STATUS_TRUE;
        $this->giftOrderModel->sender= new Gift_order_attr_customer( $this->openid );
        $this->giftOrderModel->rule= new Gift_order_attr_rule($per_give, $count_give);
        $this->giftOrderModel->theme= new Gift_order_attr_theme($theme_id, $message);
        $this->giftOrderModel->item= $items;

        $this->giftOrderModel->send_from = $send_from;
        $this->giftOrderModel->send_order_id = $send_order_id;

        $gift_id= $this->giftOrderModel->order_save($business, $this->inter_id);

        if($gift_id){
            if( $is_group== Soma_base::STATUS_TRUE ){
                $result= $this->giftOrderModel->set_redis_list($inter_id, $gift_id);
            } else {
                $result= TRUE;
            }
            $sign= Soma_base::inst()->str_encrypt($gift_id, TRUE);
            if($gift_id){
                $return['status']= Soma_base::STATUS_TRUE;
                $return['data']= $gift_id;
                $return['sign']= $sign;
                $return['desc']= $message;
                $return['message']= $result? '赠礼打包成功':
                    '您群发的礼物暂时无法领取，'. Gift_order_model::EXPIRED_HOURS. '小时候将自动退回';
            }
        }


    }
}