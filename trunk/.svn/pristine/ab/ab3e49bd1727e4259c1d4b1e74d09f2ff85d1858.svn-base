<?php
use App\libraries\Iapi\FrontConst;
use App\services\soma\ScopeDiscountService;
use App\libraries\Iapi\BaseConst;
use App\services\soma\KillsecService;

defined('BASEPATH') OR exit('No direct script access allowed');

/**
 * Class Package
 *
 *
 * 商品相关接口
 *
 * @property Product_package_model $productPackageModel
 */
class Package extends MY_Front_Soma_Iapi
{
    /**
     * @SWG\Get(
     *     tags={"package"},
     *     path="/package/info",
     *     summary="Find package by ID",
     *     description="Returns a single package",
     *     operationId="get_info",
     *     produces={"application/json"},
     *     @SWG\Parameter(
     *         description="ID of package to return",
     *         in="query",
     *         name="pid",
     *         required=false,
     *         type="integer",
     *         format="int32",
     *     ),
     *     @SWG\Response(
     *         response="200",
     *         description="successful operation",
     *         @SWG\Schema(
     *              type="object",
     *              @SWG\Property(
     *                  property="product_id",
     *                  type="integer",
     *                  format="int32",
     *              ),
     *              @SWG\Property(
     *                  property="inter_id",
     *                  type="string",
     *              ),
     *              @SWG\Property(
     *                  property="language",
     *                  enum={1, 2},
     *                  description="中英文标识，1:仅中文，2:中英文",
     *              ),
     *              @SWG\Property(
     *                  property="cat_id",
     *                  type="integer",
     *                  description="分类ID",
     *              ),
     *              @SWG\Property(
     *                  property="name",
     *                  type="string",
     *                  description="商品名" ,
     *              ),
     *              @SWG\Property(
     *                  property="latitude",
     *                  type="string",
     *                  description="纬度" ,
     *              ),
     *              @SWG\Property(
     *                  property="product_city",
     *                  type="string" ,
     *                  description="所属城市",
     *              ),
     *              @SWG\Property(
     *                  property="hotel_name",
     *                  type="string" ,
     *                  description="酒店名" ,
     *              ),
     *              @SWG\Property(
     *                  property="hotel_address",
     *                  type="string" ,
     *                  description="酒店地址" ,
     *              ),
     *              @SWG\Property(
     *                  property="hotel_tel",
     *                  type="string" ,
     *                  description="酒店电话" ,
     *              ),
     *              @SWG\Property(
     *                  property="longitude",
     *                  type="string",
     *                  description="经度",
     *              ),
     *              @SWG\Property(
     *                  property="price_market",
     *                  type="decimal",
     *                  description="市场价",
     *              ),
     *              @SWG\Property(
     *                  property="price_package",
     *                  type="decimal" ,
     *                  description="微信价",
     *              ),
     *              @SWG\Property(
     *                  property="validity_date",
     *                  type="string" ,
     *                  description="上架起始日期,如：2017-06-21 18:36:15",
     *              ),
     *              @SWG\Property(
     *                  property="un_validity_date",
     *                  type="string" ,
     *                  description="下架日期，如：2017-07-21 18:36:15",
     *              ),
     *              @SWG\Property(
     *                  property="expiration_date",
     *                  type="datetime" ,
     *                  description="失效日期，如：2017-07-21 18:36:15",
     *              ),
     *              @SWG\Property(
     *                  property="date_type",
     *                  enum={1, 2},
     *                  description="失效模式：1.固定失效时间，2.存活时间(自购买起存活天数)" ,
     *              ),
     *              @SWG\Property(
     *                  property="stock",
     *                  type="integer",
     *                  description="商品库存",
     *              ),
     *              @SWG\Property(
     *                  property="keyword",
     *                  type="string",
     *                  description="关键字" ,
     *              ),
     *              @SWG\Property(
     *                  property="conn_devices",
     *                  type="integer",
     *                  description="是否对接核销设备。1.不对接，2.对接智游宝",
     *              ),
     *              @SWG\Property(
     *                  property="order_notice",
     *                  type="string",
     *                  description="订购须知" ,
     *              ),
     *              @SWG\Property(
     *                  property="img_detail",
     *                  type="string",
     *                  description="图文详情",
     *              ),
     *              @SWG\Property(
     *                  property="face_img",
     *                  type="string",
     *                  description="封面图",
     *              ),
     *              @SWG\Property(
     *                  property="transparent_img",
     *                  type="string",
     *                  description="透明封面图" ,
     *              ),
     *              @SWG\Property(
     *                  property="status",
     *                  enum={1, 2, 3},
     *                  description="状态：1上架，2禁止，3下架" ,
     *              ),
     *              @SWG\Property(
     *                  property="can_split_use",
     *                  enum={1, 2},
     *                  description="能否分时使用：1能，2不能",
     *              ),
     *              @SWG\Property(
     *                  property="use_cnt",
     *                  type="integer",
     *                  description="分时使用次数" ,
     *              ),
     *              @SWG\Property(
     *                  property="can_wx_booking",
     *                  enum={1, 2},
     *                  description="是否可以微信订房：1可2不可",
     *              ),
     *              @SWG\Property(
     *                  property="can_refund",
     *                  enum={1, 2},
     *                  description="能否退款，1可退，2不可退",
     *              ),
     *              @SWG\Property(
     *                  property="can_mail",
     *                  enum={1, 2},
     *                  description="是否支持邮寄，1可邮寄，2不可邮寄",
     *              ),
     *              @SWG\Property(
     *                  property="can_gift",
     *                  enum={1, 2},
     *                  description="是否支持赠送，1可赠送，2不可赠送",
     *              ),
     *              @SWG\Property(
     *                  property="can_pickup",
     *                  enum={1, 2},
     *                  description="是否支持自提，1支持，2不支持",
     *              ),
     *              @SWG\Property(
     *                  property="can_sms_notify",
     *                  enum={1, 2},
     *                  description="是否支持短信通知，1支持，2不支持"
     *              ),
     *              @SWG\Property(
     *                  property="can_invoice",
     *                  enum={1, 2},
     *                  description="能否开发票，1可以，2不可以",
     *              ),
     *              @SWG\Property(
     *                  property="can_reserve",
     *                  enum={1, 2},
     *                  description="能否预约，1可以，2不可以",
     *              ),
     *              @SWG\Property(
     *                  property="show_sales_cnt",
     *                  enum={1, 2},
     *                  description="是否显示销售数量，1显示，2不显示" ,
     *              ),
     *              @SWG\Property(
     *                  property="gallery",
     *                  type="array",
     *                  @SWG\Items(
     *                      type="object",
     *                      @SWG\Property(
     *                          property="gry_id",
     *                          type="integer" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="gry_url",
     *                          type="string" ,
     *                      )
     *                  )
     *              ),
     *              @SWG\Property(
     *                  property="killsec",
     *                  type="array",
     *                  description="秒杀产品数据" ,
     *                  @SWG\Items(
     *                      type="object",
     *                      @SWG\Property(
     *                          property="act_id",
     *                          type="integer" ,
     *                          description="活动ID" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="act_type",
     *                          enum={1, 2},
     *                          description="1拼团，2秒杀" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="act_name",
     *                          type="string" ,
     *                          description="活动名称" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="killsec_price",
     *                          type="float" ,
     *                          description="秒杀价" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="killsec_count",
     *                          type="integer" ,
     *                          description="库存数量" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="killsec_permax",
     *                          type="integer" ,
     *                          description="个人秒杀上限" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="is_stock",
     *                           enum={1, 2},
     *                          description="是否显示名额，1显示，2不显示" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="is_subscribe",
     *                          enum={1, 2},
     *                          description="能否订阅，1可以，2不可以" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="schedule_type",
     *                          enum={1, 2},
     *                          description="秒杀类型，1固定日期秒杀，2周期循环秒杀" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="schedule",
     *                          type="string" ,
     *                          description="秒杀周日子（1,3,5）表示周一，周三，周五" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="start_time",
     *                          type="string" ,
     *                          description="开始展示时间" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="killsec_time",
     *                          type="string" ,
     *                          description="秒杀开始时间" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="end_time",
     *                          type="string" ,
     *                          description="秒杀结束时间" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="status",
     *                          enum={1, 2},
     *                          description="秒杀活动的状态，1生效，2已失效" ,
     *                      )
     *                  )
     *              ),
     *              @SWG\Property(
     *                  property="groupons",
     *                  type="array",
     *                  description="秒杀" ,
     *                  @SWG\Items(
     *                      type="object",
     *                      @SWG\Property(
     *                          property="act_id",
     *                          type="integer" ,
     *                          description="活动ID" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="hotel_id",
     *                          type="integer" ,
     *                          description="酒店ID" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="act_type",
     *                          enum={1, 2},
     *                          description="活动类型，1拼团,2秒杀" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="act_name",
     *                          type="string" ,
     *                          description="活动名称" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="group_price",
     *                          type="float" ,
     *                          description="拼团价格" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="group_count",
     *                          type="integer",
     *                          description="拼团成功所需人数" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="group_deadline",
     *                          type="integer",
     *                          description="活动持续天数" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="start_time",
     *                          type="string",
     *                          description="拼团开始时间，如：2016-11-17 15:05:15" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="end_time",
     *                          type="string" ,
     *                          description="拼团结束时间" ,
     *                      ),
     *                      @SWG\Property(
     *                          property="status",
     *                          enum={1, 2},
     *                          description="拼团状态，1激活中，2失效" ,
     *                      )
     *                  )
     *              ),
     *              @SWG\Property(
     *                  property="public",
     *                  type="object",
     *                  @SWG\Property(
     *                      property="name",
     *                      type="string" ,
     *                  )
     *              )
     *         )
     *     ),
     *     @SWG\Response(
     *         response="400",
     *         description="Invalid pid supplied"
     *     ),
     *     @SWG\Response(
     *         response="404",
     *         description="Package not found"
     *     ),
     * )
     */
    public function get_info()
    {
        $data = [];

        $productId = $this->input->get('pid');

        if (empty($productId)) {
            show_error('Invalid pid supplied', 400);
        }

        $this->load->model('soma/product_package_model', 'productPackageModel');
        $productModel =  $this->productPackageModel;
        $productDetail = $this->productPackageModel->getByID($productId, $this->inter_id);

        if (empty($productDetail)) {
            show_404();
        }

        $productDetail['gallery'] = $this->productPackageModel->get_gallery_front($productId, $this->inter_id);

        $products = array($productDetail);
        ScopeDiscountService::getInstance()->appendScopeDiscount($products, $this->current_inter_id, $this->openid, false);
        $productDetail = $products[0];
        $this->productPackageModel->appendEnInfo($productDetail);

        //todo 秒杀
        $is_expire = false;
        $data['is_expire'] = $is_expire;

        //秒杀相关
        $finish_killsec = false;
        $killsec = [];
        if (!$is_expire) {
            $killsec = KillsecService::getInstance()->getInfo($productId);
            if ($killsec) {
                $finish_killsec = $killsec['finish'];
                //月饼说皮肤：秒杀倒计时
                $killsec['killsec_countdown'] = strtotime($killsec['killsec_time']) * 1000;
            }
        }

        //秒杀库存刷新频率
        $data['stock_reflesh_rate'] = 10000;
        if (ENVIRONMENT === 'production') {
            $data['stock_reflesh_rate'] = 60000;
        }


        //todo 拼团
        $this->load->model('soma/Activity_groupon_model', 'grouponModel');
        $groupons = $this->grouponModel->groupon_list($productId);
        if ($groupons && count($groupons) > 1) {
            $groupons[0] = array_pop($groupons);
        }


        //如果是积分商品，去掉小数点，向上取整
        if ($productDetail['type'] == $productModel::PRODUCT_TYPE_POINT) {
            $productDetail['price_package'] = ceil($productDetail['price_package']);
            $productDetail['price_market'] = ceil($productDetail['price_market']);

            if ($killsec) {
                $killsec['killsec_price'] = ceil($killsec['killsec_price']);
            }

            if ($groupons) {
                $groupons[0]['group_price'] = ceil($groupons[0]['group_price']);
            }
        }

        $isOff = $this->productPackageModel->isOff($productDetail);

        $data['product'] = $productDetail;
        $data['public'] = ['name' => $this->public['name']];

        $data['groupons'] = $groupons;   //拼团
        $data['killsec'] = $killsec;    //秒杀
        $data['finish_killsec'] = $finish_killsec;    //秒杀
        
        $this->out_put_msg(FrontConst::OPER_STATUS_SUCCESS, '', $data);
    }

    //todo 获取对规格数据
    //todo 查询自身分销员信息
    /**
     * @SWG\Get(
     *     tags={"package"},
     *     path="/package/list",
     *     summary="home products",
     *     description="return products",
     *     operationId="get_list",
     *     produces={"application/json"},
     *     @SWG\Parameter(
     *         description="第几页",
     *         in="query",
     *         name="page",
     *         required=false,
     *         type="integer"
     *     ),
     *     @SWG\Parameter(
     *         description="每页行数",
     *         in="query",
     *         name = "page_size",
     *         required=false,
     *         type="integer"
     *     ),
     *     @SWG\Parameter(
     *         description="传1显示广告和分类 传2不显示",
     *         in="query",
     *         name = "show_ads_cat",
     *         required=false,
     *         type="integer"
     *     ),
     *     @SWG\Parameter(
     *         description="分类id",
     *         in="query",
     *         name = "fcid",
     *         required=false,
     *         type="integer"
     *     ),
     *     @SWG\Response(
     *         response="200",
     *         description="successful operation",
     *         @SWG\Schema(
     *              type="object",
     *              @SWG\Property(
     *                  property="products",
     *                  type="array",
     *                  @SWG\Items(
     *                      type="object",
     *                      @SWG\Property(
     *                          property="cat_id",
     *                          type="integer",
     *                          format="int32",
     *                      ),
     *                      @SWG\Property(
     *                          property="product_id",
     *                          type="integer",
     *                          format="int32",
     *                      ),
     *                      @SWG\Property(
     *                          property="inter_id",
     *                          type="string",
     *                      ),
     *                      @SWG\Property(
     *                          property="goods_type",
     *                          type="integer"
     *                      ),
     *                      @SWG\Property(
     *                          property="face_img",
     *                          type="string"
     *                      ),
     *                      @SWG\Property(
     *                          property="name",
     *                          type="string"
     *                      ),
     *                      @SWG\Property(
     *                          property="price_market",
     *                          type="float"
     *                      ),
     *                      @SWG\Property(
     *                          property="price_package",
     *                          type="float"
     *                      ),
     *                      @SWG\Property(
     *                          property="stock",
     *                          type="integer"
     *                      ),
     *                      @SWG\Property(
     *                          property="is_hide",
     *                          type="integer"
     *                      ),
     *                      @SWG\Property(
     *                          property="validity_date",
     *                          type="string"
     *                      ),
     *                      @SWG\Property(
     *                          property="sort",
     *                          type="integer"
     *                      ),
     *                      @SWG\Property(
     *                          property="status",
     *                          type="integer"
     *                      ),
     *                      @SWG\Property(
     *                          property="type",
     *                          type="integer"
     *                      )
     *                  ),
     *                  description="商品列表"
     *              ),
     *              @SWG\Property(
     *                  property="ads",
     *                  type="array",
     *                  description="广告 show_ads_cat=1时才显示",
     *                  @SWG\Items(
     *                      type="object",
     *                      @SWG\Property(
     *                          property="adv_id",
     *                          type="integer",
     *                      ),
     *                       @SWG\Property(
     *                          property="hotel_id",
     *                          type="integer",
     *                      ),
     *                       @SWG\Property(
     *                          property="inter_id",
     *                          type="string",
     *                      ),
     *                      @SWG\Property(
     *                          property="name",
     *                          type="string",
     *                      ),
     *                       @SWG\Property(
     *                          property="name_en",
     *                          type="string",
     *                      ),
     *                      @SWG\Property(
     *                          property="type",
     *                          type="integer",
     *                          description = "类型：1：产品广告；2：分类广告"
     *                      ),
     *                      @SWG\Property(
     *                          property="cat_id",
     *                          type="integer",
     *                      ),
     *                      @SWG\Property(
     *                          property="product_id",
     *                          type="integer",
     *                      ),
     *                      @SWG\Property(
     *                          property="logo",
     *                          type="string",
     *                      ),
     *                      @SWG\Property(
     *                          property="link",
     *                          type="string",
     *                      ),
     *                      @SWG\Property(
     *                          property="sort",
     *                          type="integer",
     *                      ),
     *                      @SWG\Property(
     *                          property="status",
     *                          type="integer",
     *                      ),
     *                  )
     *               ),
     *              @SWG\Property(
     *                  property="categories",
     *                  type="array",
     *                  description="分类 show_ads_cat=1时才显示",
     *                  @SWG\Items(
     *                      type="object",
     *                      @SWG\Property(
     *                          property="cat_id",
     *                          type="integer",
     *                      ),
     *                       @SWG\Property(
     *                          property="inter_id",
     *                          type="string",
     *                      ),
     *                       @SWG\Property(
     *                          property="hotel_id",
     *                          type="integer",
     *                      ),
     *                      @SWG\Property(
     *                          property="cat_name",
     *                          type="string",
     *                      ),
     *                       @SWG\Property(
     *                          property="cat_name_en",
     *                          type="string",
     *                      ),
     *                      @SWG\Property(
     *                          property="cat_img",
     *                          type="string",
     *                      ),
     *                      @SWG\Property(
     *                          property="cat_keyword",
     *                          type="string",
     *                      ),
     *                      @SWG\Property(
     *                          property="cat_desc",
     *                          type="string",
     *                      ),
     *                      @SWG\Property(
     *                          property="cat_sort",
     *                          type="integer",
     *                      ),
     *                      @SWG\Property(
     *                          property="parent_id",
     *                          type="integer",
     *                      ),
     *                      @SWG\Property(
     *                          property="sort",
     *                          type="integer",
     *                      ),
     *                      @SWG\Property(
     *                          property="status",
     *                          type="integer",
     *                      ),
     *                  ),
     *
     *              ),
     *         )
     *     )
     * )
     */
    public function get_list()
    {
        $page_data = [];

        $filter_cat = $this->input->get('fcid');
        $show_ads_cat = $this->input->get('show_ads_cat');
        $page_size = $this->input->get('page_size', null, 20);
        $page = $this->input->get('page', null, 1);

        if ($show_ads_cat == MY_Model_Soma::STATUS_TRUE) {
            //首页广告图
            $this->load->model('soma/Adv_model', 'ads_model');
            $page_data['advs'] = $this->ads_model->get_ads_by_category($this->inter_id);

            //分类
            $this->load->model('soma/Category_package_model', 'categoryModel');
            $page_data['categories'] = $this->categoryModel->get_package_category_list($this->inter_id, null, 5, $filter_cat);
        }

        //商品
        $this->load->model('soma/Product_package_model', 'productModel');
        $productModel = $this->productModel;

        $field = array('inter_id', 'is_hide', 'status');
        $field_value = array($this->inter_id, $productModel::STATUS_CAN_YES, $productModel::STATUS_ACTIVE);
        $return_fields = [
            'product_id',
            'inter_id',
            'cat_id',
            'goods_type',
            'face_img',
            'name',
            'price_market',
            'price_package',
            'stock',
            'is_hide',
            'validity_date',
            'sort',
            'status',
            'type'
        ];
        $options = array('limit' => $page_size, 'offset' => ($page - 1) * $page_size, 'orderBy' => 'product_id asc');
        $products = $productModel->get($field, $field_value, $return_fields, $options);

        $productIds = array_column($products, 'product_id');

        $result = $pointProductIds =array();
        //积分商品
        foreach ($products as $p) {
            if ($p['type'] == $productModel::PRODUCT_TYPE_POINT) $pointProductIds[] = $p['product_id'];
            $result[$p['product_id']] = $p;
        }

        //拼团列表
        $this->load->model('soma/Activity_groupon_model', 'activityGrouponModel');
        $groupons = $this->activityGrouponModel->groupon_list_by_productIds($productIds, $this->inter_id);
        foreach ($groupons as $groupon) {
            if (in_array($groupon['product_id'], $pointProductIds)) {
                $groupon['group_price'] = ceil($groupon['group_price']);
            }
            $result[$groupon['product_id']]['groupon'] = $groupon;

        }

//      秒杀列表
        $this->load->model('soma/Activity_killsec_model', 'activityKillsecModel');
        $killsecs = $this->activityKillsecModel->killsec_list_by_productIds($productIds, $this->inter_id);

        foreach ($killsecs as $killsec) {
            if (in_array($killsec['product_id'], $pointProductIds)) {
                $killsec['killsec_price'] = ceil($killsec['killsec_price']);
            }
            /** 对秒杀开始时间进行处理 */
            $killsec['killsec_time'] = date('Y-m-d H:i:s', strtotime($killsec['killsec_time']) - Activity_killsec_model::PRESTART_TIME);
            $result[$killsec['product_id']]['killsec'] = $killsec;
        }

        //满减活动
        $this->load->model('soma/Sales_rule_model', 'salesRuleModel');
        $rules = $this->salesRuleModel->get_product_rule($productIds, $this->inter_id);
        if ($rules) {
            foreach ($rules as $rule) {
                if ($rule['scope'] == Soma_base::STATUS_TRUE) {
                    //全部适用
                    // 非满减规则过滤
                    $not_auto_rule_arr = array(Sales_rule_model::RULE_TYPE_POINT, Sales_rule_model::RULE_TYPE_BALENCE);
                    if (!in_array($rule['rule_type'], $not_auto_rule_arr)) {
                        foreach ($productIds as $v) {
                            if (!isset($result[$v]['auto_rule'])) {
                                $result[$v]['auto_rule'] = $rule;
                            }
                        }
                    }
                } else {
                    foreach ($rule['product_id'] as $rule_pid) {
                        $result[$rule_pid]['auto_rule'] = $rule;
                    }
                }
            }
        }

        // 商品多规格,多规格商品显示最低的规格价格
        $this->load->model('soma/Product_specification_setting_model', 'psp_model');

        if ($productIds) {
            $psp_setting = $this->psp_model->get_inter_product_spec_setting($this->inter_id, $productIds);

            if (!empty($psp_setting)) {
                $settingList = $this->_get_setting_info($psp_setting);
                $psp_setting = $settingList['settingInfo'];
                foreach ($psp_setting as $pid => $setting) {
//                    $result[$pid]['psp_setting'] = $setting;
                    $result[$pid]['price_package'] = $setting[0]['spec_price'];
                }
            }
        }

        $page_data['products'] = array_values($result);

        //给商品追加价格配置的东西
        ScopeDiscountService::getInstance()->appendScopeDiscount($page_data['products'], $this->current_inter_id, $this->openid);

        $this->out_put_msg(BaseConst::OPER_STATUS_SUCCESS, '', $page_data);
    }

    /**
     * @SWG\Get(
     *     tags={"package"},
     *     path="/package/settings",
     *     summary="Find settings by ID",
     *     description="Returns production specific setting ",
     *     produces={"application/json"},
     *     @SWG\Parameter(
     *         description="ID of package to return",
     *         in="query",
     *         name="pid",
     *         required=true,
     *         type="integer",
     *         format="int32"
     *     ),
     *     @SWG\Response(
     *         response=200,
     *         description="successful operation",
     *         @SWG\Schema(
     *              type="object",
     *              @SWG\Property(
     *                  property="setting_id",
     *                  type="integer",
     *                  format="int32",
     *              ),
     *              @SWG\Property(
     *                  property="product_id",
     *                  type="integer",
     *                  format="int32",
     *              ),
     *              @SWG\Property(
     *                  property="inter_id",
     *                  type="string",
     *              ),
     *              @SWG\Property(
     *                  property="hotel_id",
     *                  type="string"
     *              ),
     *              @SWG\Property(
     *                  property="outter_sku",
     *                  type="string" ,
     *                  description="商品SKU"
     *              ),
     *              @SWG\Property(
     *                  property="setting_spec_compose",
     *                  type="string"
     *              ),
     *              @SWG\Property(
     *                  property="spec_face_img",
     *                  type="string"
     *              ),
     *              @SWG\Property(
     *                  property="spec_price",
     *                  type="string"
     *              ),
     *              @SWG\Property(
     *                  property="spec_stock",
     *                  type="string"
     *              ),
     *              @SWG\Property(
     *                  property="type",
     *                  type="integer",
     *                  description="商品类型：1.套票类，2.特权券"
     *              ),
     *              @SWG\Property(
     *                  property="goods_type",
     *                  type="integer",
     *                  description="商品类型。1:通用；2:门票"
     *              )
     *         )
     *     ),
     *     @SWG\Response(
     *         response="400",
     *         description="Invalid pid supplied"
     *     )
     * )
     */
    public function get_settings()
    {
        $productId = $this->input->get('pid');

        if (empty($productId)) {
            show_error('Invalid pid supplied', 400);
        }

        $this->load->model('soma/Product_specification_setting_model', 'psp_model');
        $psp_setting = $this->psp_model->get_inter_product_spec_setting($this->inter_id, array($productId));

        $this->out_put_msg(BaseConst::OPER_STATUS_SUCCESS, '', $psp_setting);
    }

    /**
     * 处理规格信息
     * @param $psp_setting
     * @return array
     * @author luguihong  <luguihong@mofly.cn>
     */
    protected function _get_setting_info($psp_setting)
    {
        $dataTicket = $data = array();
        //判断是否有门票类的
        $isTicket = false;
        foreach ($psp_setting as $row) {
            if ($row['type'] == Soma_base::STATUS_TRUE) {
                $data[$row['product_id']][] = $row;
            } elseif ($row['type'] == Soma_base::STATUS_FALSE) {
                $isTicket = true;
                $dataTicket[$row['product_id']][] = $row;
            }
        }

        if ($isTicket && $dataTicket) {
            $psp_setting = $dataTicket;
        } else {
            $psp_setting = $data;
        }

        return array(
            'isTicket'    => $isTicket,
            'settingInfo' => $psp_setting,
        );
    }


}