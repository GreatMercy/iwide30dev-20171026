<template>
  <li class="good-lists__item-card">
    <a :href="detail" class="item-cont">
      <div class="goods-box">
        <div class="goods-image">
          <div class="jfk-image__lazy goods-image-cont jfk-image__lazy--3-3 jfk-image__lazy--background-image" v-lazy:background-image="item.face_img">
          </div>
        </div>
        <div class="goods-info jfk-flex is-align-middle">
          <div class="goods-info-cont">
            <h3 class="goods-title font-size--32 font-color-dark-white" v-once>{{item.name}}</h3>
            <div class="goods-price jfk-price color-golden font-size--54">
              <i class="jfk-font-number jfk-price__currency">￥</i>
              <i class="jfk-font-number jfk-price__number">{{price}}</i>
            </div>
            <p v-if="goodNumInfo" class="font-size--24 goods-number font-color-light-gray" v-html="goodNumInfo"></p>
            <JfkButton :type="type === 'killsec' ? 'primary' : 'default'" @click.native="clickHandler" @click="clickHandler" class="font-size--30 goods-button" font="qkbys">{{buttonText}}</JfkButton>
          </div>
        </div>
      </div>
    </a>
  </li>
</template>
<script>
  import listMixin from './listMixin'
  export default {
    name: 'good-list-card',
    mixins: [listMixin],
    created () {
    },
    computed: {
      goodNumInfo () {
        if (this.type === 'killsec') {
          let count = this.startedKillsec ? this.info.killsec_permax - this.info.killsec_count : this.info.killsec_permax
          return '剩余' + count + '&nbsp;|&nbsp;限' + this.info.killsec_permax
        }
        if (this.type === 'groupon') {
          return '已售' + this.item.sales_cnt
        }
        return false
      }
    }
  }
</script>
<style lang="postcss" scoped>
  .good-lists__item-card {
    position: relative;
    width: 100%;
    padding-bottom: calc(322 / 690 * 100%);
    & + .good-lists__item-card {
      margin-top: calc(30 / 690 * 100%);
    }
  }
  .item-cont{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  .goods-box,.goods-image-cont{
    height: 100%;
  }
  .goods-image{
    position: absolute;
    top: calc(16 / 322 * 100%);
    bottom: calc(16 / 322 * 100%);
    width: calc(300 / 690 * 100%);
    z-index: 1;
    overflow: hidden;
  }
  .goods-image-cont{
    &[lazy="loaded"] {
      &:before, &:after{
        content: '';
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
      }
      &:before{
        background-color: #1f1f1f;
        opacity: 0.2;
      }
      &:after{
        background-image: linear-gradient(to left, rgba(7,7,7,0.4) 10%, rgba(0,0,0,0));
        transform-origin: top left;
        transform: skew(-23deg, 0deg);
      }
    }
  }
  .goods-info{
    position: absolute;
    top: 0;
    bottom: 0;
    width: calc(390 / 690 * 100%);
    right: 0;
    z-index: 2;
    &:before{
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      transform-origin: top right;
      transform: skew(-23deg, 0deg);
      z-index: -1;
    }
  }
  .goods-info-cont {
    position: relative;
    width: 100%;
    box-sizing: border-box;
    padding-right: px2rem(26);
  }
  .goods-title {
    line-height: 1.5625;
    padding: 0 px2rem(20) px2rem(16) px2rem(16);
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: 3;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    max-height: calc(1em * 3 * 1.5625);
    box-sizing: border-box;
  }
  .goods-price,.goods-number {
    margin-left: calc(-1 * px2rem(14));
  }
  .goods-button{
    position: absolute;
    right: px2rem(26);
    bottom: 0;
  }
</style>
