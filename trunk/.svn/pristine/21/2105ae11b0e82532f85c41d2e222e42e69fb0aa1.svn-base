<template >
  <div @touchmove.prevent>
    <div>
      <div id="carousel" ref="thewidth" v-on:touchstart="ts" v-on:touchmove="tm" v-on:touchend="te">
        <div class="figure" :style="{'transform':'translateX(' + angle + 'px)'}">
          <div v-for="item in swipeinfo" :class="whitch === item.name ? 'show' : ''">
            <img :src="item.imgSrc" :class="whitch === item.name ? 'big' : ''">
          </div>
        </div>
      </div>
      <div class="btns" v-on:click="qr">чбошод</div>
    </div>
  </div>
</template>
<script>
export default{
  name: 'choiceGift',
  props: ['swipeinfo'],
  data () {
    return {
      angle: 0,
      touch: null,
      angle2: 0,
      theX: null,
      numbers: 0,
      windowwidth: 0,
      whitch: null
    }
  },
  methods: {
    galleryspin: function (sign) {
      if (sign === '+') {
        this.angle = this.angle + this.windowwidth
      } else {
        this.angle = this.angle - this.windowwidth
      }
      if (this.angle > 0) {
        this.angle = 0
      }
      if (this.angle < (1 - this.swipeinfo.length) * this.windowwidth) {
        this.angle = (1 - this.swipeinfo.length) * this.windowwidth
      }
      let whichone = -this.angle / this.windowwidth
      this.whitch = this.swipeinfo[whichone].name
    },
    ts: function (e) {
      this.touch = null
      this.theX = null
      this.touch = e.touches[0].clientX
      this.theX = e.touches[0].clientX
      this.angle2 = this.angle
    },
    tm: function (e) {
      this.theX = e.touches[0].clientX
      this.angle = this.angle + (this.theX - this.touch) / 375
    },
    te: function () {
      this.angle = this.angle2
      if (this.theX - this.touch > 0) {
        this.galleryspin('+')
      } else if (this.theX - this.touch < 0) {
        this.galleryspin('-')
      }
      this.touch = null
      this.theX = null
    },
    qr: function () {
      this.$emit('choiced', this.whitch)
    }
  },
  mounted: function () {
    this.numbers = this.swipeinfo.length
    this.windowwidth = this.$refs.thewidth.clientWidth
    let middle = parseInt((this.numbers - 1) / 2 + 1)
    this.angle = (1 - middle) * this.windowwidth
    let whichone = -this.angle / this.windowwidth
    this.whitch = this.swipeinfo[whichone].name
  }
}
</script>
<style lang="postcss" scoped>
@import '../../styles/postcss/all.postcss';
#carousel{
  margin: px2rem(80) auto;
  width: px2rem(590);
}
.figure{
  display: inline-flex;
  flex-wrap: nowrap;
  transition: 1s all;
  position: relative;
  img{
    min-width: px2rem(590);
    height: px2rem(880);
    transform: scale(0.9);
    transform-origin: center;
    transition: 1s all;
    position: relative;
  }
  div{
    position: relative;
  }
  div::after{
    content: "";
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.6);
    position: absolute;
    left: 0px;
    top: 0px;
    opacity: 1;
    transition: all 1s;
  }
}
.big{
  transform: scale(1) !important;
}
.show::after{
  opacity: 0 !important;
}
.btns{
  width: px2rem(586);
  height: px2rem(88);
  line-height: px2rem(88);
  text-align: center;
  color: var(--white);
  letter-spacing: px2rem(10);
  border: 1px solid var(--darkgold);
  margin: auto;
}
</style>
