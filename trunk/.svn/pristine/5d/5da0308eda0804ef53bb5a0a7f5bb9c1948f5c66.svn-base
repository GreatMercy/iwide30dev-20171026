<template>
  <div class="gradient_bg padding_35">
<!--   <input style="background: white" type="date"  value="2015-01-01"> -->
    <section class="padding_0_15">
      <form class="form_list font_14" ref="form">
        <div class="form_item bd_bottom padding_18" v-for="(value,key) in configList"  v-if="value.show === 1" :data="value.show">
          <div class="flex">
            <div class="margin_right_42 width_120">{{value.name}}</div>
            <div v-if="key === 'sex'" class="flex_1">
              <select class="font_15 color3" :value="value.value" :name="key" :disabled="view">
                <option value="1" name="1">男</option>
                <option value="2" name="2">女</option>
                <option value="3" name="3">-</option>
              </select>
            </div>
            <div v-else-if="key === 'birthday'" class="flex_1">
              <input type="date" :name="key" :disabled="view"  :value="value.value">
            </div>
            <div v-else class="flex_1">
              <input class="font_14"  :disabled="view" @keyup="setRemove($event)" :value="value.value" :type="value.type" :name="key" placeholder="-">
            </div>
          </div>
        </div>
        <div class="margin_top_75 font_17">
          <a class="block width_85 center padding_15 auto iconfont entry_btn preservation" @click="submit()" v-show="!view">&#xe608;&ensp;&#xe60a;</a>
          <a class="block width_85 center padding_15 auto iconfont entry_btn" @click="perfectinfoInfo()" v-show="view">&#xe635;&#xe636;&#xe634;&#xe637;</a>
        </div>
        <div class="center margin_top_30">
          <div class="font_12" @click="outLogin"><span class="main_color1">退出登录</span></div>
        </div>
      </form>
    </section>
    <JfkSupport v-once></JfkSupport>
  </div>
</template>
<style>
  
</style>
<script>
import { getMemberInfo, getPerfectinfoInfo, postPerfectinfoSave, outLogin } from '@/service/http'
import { formatDate } from '@/utils/utils'
export default {
  data () {
    return {
      configList: [],
      centerInfo: [],
      links: [],
      view: true
    }
  },
  created () {
    this.getInfo()
  },
  methods: {
    submit () {
      let result = this.$refs.form
      let setDate = {}
      let setBol = true

      for (let item in this.configList) {
        if (this.configList[item].show === 0) {
          continue
        }
        if (result[[item]].value === '') {
          result[[item]].setAttribute('class', 'bg_ico_close')
          setBol = false
          continue
        }
        if (this.configList[item].check === 1) {
          let str = '/' + this.configList[item].regular + '/'
          /* eslint-disable */let reg = eval(str)
          if (!reg.test(result[[item]].value)) {
            result[[item]].value = ''
            result[[item]].placeholder = '请输入正确的' + this.configList[item].name
            result[[item]].setAttribute('class', 'bg_ico_sigh')
            setBol = false
            continue
          }
        }
        setDate[[item]] = result[[item]].value 
      }

      if (setBol) {
        setDate.debug = 1
        postPerfectinfoSave(setDate).then((res) => {
          if (res.status === 1000) {
            alert('保存成功！')
            this.getInfo()
          } else {
            alert(res.msg)
          }
        })
      }
    },
    recombination () {
      //重组数据
      for (let item in this.configList) {
        if (this.configList[item]['show'] === 1) {
          switch (item) {
            case 'name':
              if ( this.centerInfo.name !== '微信用户') {
                this.configList[item].value = this.centerInfo.name
              }
              break
            case 'phone':
              this.configList[item].value = this.centerInfo.cellphone
              break
            case 'email':
              this.configList[item].value = this.centerInfo.email
              break
            case 'sex':
              this.configList[item].value = this.centerInfo.sex
              break
            case 'birthday':
              this.configList[item].value = this.centerInfo.birth > 0 ? formatDate(this.centerInfo.birth) : ''
              break
            case 'idno':
              this.configList[item].value = this.centerInfo.id_card_no
              break
          }
        }
      }
    },
    getInfo () {
      getMemberInfo().then((res) => {
        this.configList = res.web_data.modify_config
        this.centerInfo = res.web_data.centerinfo
        this.recombination()
        this.links = res.web_data.page_resource.links
        this.view = true
      })
    },
    perfectinfoInfo () {
      getPerfectinfoInfo().then((res) => {
        this.configList = res.web_data.modify_config
        this.centerInfo = res.web_data.centerinfo
        this.recombination()
        this.view = false
      })
    },
    setRemove (even) {
      even.target.className = ''
    },
    outLogin () {
      outLogin().then((res) => {
         if (res.status === 1000) {
           window.location.href = res.web_data.page_resource.links.login
         } else {
           alert(res.msg)
         }
      })
    }
  }
}
</script>
