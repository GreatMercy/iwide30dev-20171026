<template>
  <div class="mall-delivery-wrap jfk-pages" v-loading.fullscreen.lock="loading">
    <el-form :model="form" :rules="rules" ref="form">
      <el-form-item label="快递服务商" :label-width="formLabelWidth" prop="postProvider">
        <el-row>
          <el-col :span="12">
            <el-select v-model="form.postProvider"
                       ref="select"
                       filterable
                       remote
                       clearable
                       :placeholder="'请输入快递服务商'">
              <el-option v-for="(item, index) in express_providers" :key="index" :label="item.dist_label"
                         :value="item.dist_name">
              </el-option>

            </el-select>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="发货文件" :label-width="formLabelWidth" prop="fileName">
        <el-row>
          <el-col :span="12">
            <el-upload
              :auto-upload="true"
              :action="action"
              :on-success="success"
              :on-error="error"
              :before-upload="change"
              accept="text/csv">
              <el-button size="small" type="primary">点击上传</el-button>
              <div slot="tip" class="el-upload__tip">请上传csv格式的文件，并确保快递单号无误</div>
            </el-upload>
            <input type="hidden" v-model="form.fileName">
          </el-col>
        </el-row>
        <el-row>
          <div class="csv-name" v-html="fileName"></div>
        </el-row>
      </el-form-item>
    </el-form>
    <el-row>
      <div class="delivery-btn">
        <el-col :span="12">
          <el-button type="primary" @click="send" :loading="btnLoading">确定发货</el-button>
        </el-col>
      </div>
    </el-row>

    <el-row v-if="failTableData.length > 0">
      <div class="mall-delivery-fail-title">邮寄发货失败的列表：</div>
      <el-table :data="failTableData">
        <el-table-column
          prop="shipping_id"
          align="center"
          label="邮寄id">
        </el-table-column>
        <el-table-column
          align="center"
          prop="message"
          label="失败原因">
        </el-table-column>
      </el-table>
    </el-row>
  </div>
</template>
<script>
  import { getExpressList, postExpressBatchPost } from '@/service/mall/http'
  import { v1 } from '@/service/mall/api'
  export default {
    components: {},
    data () {
      return {
        btnLoading: false,
        fileName: '',
        loading: true,
        action: '',
        express_providers: [],
        formLabelWidth: '120px',
        fileList: [],
        failTableData: [],
        csrf: {},
        form: {
          postProvider: '',
          fileName: ''
        },
        rules: {
          postProvider: [
            {required: true, message: '请输入快递服务商', trigger: 'change'}
          ],
          fileName: [
            {required: true, message: '请上传csv格式的文件', trigger: 'change'}
          ]
        }
      }
    },
    created () {
      this.action = v1.POST_EXPRESS_UPLOAD
      getExpressList().then((res) => {
        this['express_providers'] = res['web_data']['data']
        this.csrf = res['web_data']['csrf']
        this.loading = false
      }).catch(() => {
        this.loading = false
      })
    },
    methods: {
      change () {
        this.loading = true
      },
      success (response, file, fileList) {
        this.loading = false
        if (response['status'] === 1000) {
          this.form['fileName'] = response['web_data']['path']
          this.fileName = file.name
          this.$refs['form'].validateField('fileName')
          this.$notify({
            type: 'success',
            title: '温馨提示',
            message: '上传文件成功',
            customClass: 'jfk-notification--center'
          })
        } else {
          this.$notify({
            type: 'success',
            title: '温馨提示',
            customClass: 'jfk-notification--center',
            message: '上传文件失败'
          })
        }
      },
      error () {
        this.loading = false
        this.$notify({
          type: 'error',
          title: '温馨提示',
          customClass: 'jfk-notification--center',
          message: '上传文件失败'
        })
      },
      send () {
        this.$refs['form'].validate((valid) => {
          if (valid) {
            this.btnLoading = true
            let data = {
              'distributor': this.form.postProvider,
              'path': this.form.fileName
            }
            data[this.csrf['csrf_token']] = this.csrf['csrf_value']
            postExpressBatchPost(data, {
              'REJECTERRORCONFIG': {
                'serveError': true
              }
            }).then((res) => {
              this.btnLoading = false
            }).catch((res) => {
              this.btnLoading = false
              if (res.status === 1000) {
                if (res['web_data']) {
                  this.failTableData = res['web_data']
                }
              } else {
                this.$notify({
                  type: 'error',
                  title: '温馨提示',
                  customClass: 'jfk-notification--center',
                  message: res['msg']
                })
              }
            })
          }
        })
      }
    }
  }
</script>
<style lang="postcss">
  .jfk-pages {
    padding: 15px;
  }

  input[type=file] {
    display: none;
  }

  .mall-delivery-wrap {
    .el-upload-list {
      display: none;
    }
    .jfk-container {
      padding: 15px 20px;
    }

    .el-autocomplete {
      width: 100%;
    }

    .delivery-btn {
      margin-left: 120px;
      text-align: center;
    }

    .csv-name {
      font-size: 12px;
      color: #999999;
    }
    .mall-delivery-fail-title {
      margin: 10px auto;
      color: #333333;
      font-size: 14px;
    }
  }


</style>
