<template>
  <div class="jfk-pages jfk-pages__reserve">
    <div class="jfk-pages__theme"></div>
    <div class="reserve-box" v-if="productInfo.product_id">
      <reverse-killsec-time :end="countdown" v-if="productInfo.tag === 2 && tokenId"></reverse-killsec-time>
      <div class="mail-only jfk-pt-30 jfk-pl-30 jfk-pr-30" v-if="addressPosition === 1">
        <div class="address card">
          <div class="add jfk-flex is-align-middle is-justify-center font-size--28 font-color-extra-light-gray" v-if="addressId === '-1'">
            <span class="cont">
              <i class="icon color-golden">+</i>新增收货地址
            </span>
          </div>
          <div class="list jfk-flex is-align-middle" v-else>
            <div class="cont">
              <div class="list-item">
                <span class="label font-color-extra-light-gray font-size--24 label--word-3">收件人</span>
                <div class="item-cont font-size--28 font-color-white">
                  <span class="contact">{{addressPicked.contact}}</span>
                  <span class="phone">{{addressPicked.phone}}</span>
                </div>
              </div>
              <div class="list-item">
                <span class="label font-color-extra-light-gray font-size--24">收件地址</span>
                <div class="item-cont font-color-white font-size--28">{{addressPickedDetail}}</div>
              </div>
              <i class="jfk-font icon-user_icon_jump_normal font-color-extra-light-gray font-size--24 list-icon"></i>
            </div>
            <div class="lace"></div>
          </div>
        </div>
      </div>
      <div class="product-info jfk-ml-30 jfk-mr-30">
        <div class="name font-color-white font-size--38">{{productInfo.name}}</div>
        <div class="product-other font-size--24" v-once v-html="productOtherHtml"></div>
        <div class="price">
          <span class="jfk-price product-price-package color-golden font-size--54">
            <i class="jfk-font-number jfk-price__currency" v-if="productInfo.tag !== 7">￥</i>
            <i class="jfk-font-number jfk-price__number">{{productInfo.price_package}}</i>
          </span>
        </div>
      </div>
      <div class="mail-gift jfk-ml-30 jfk-mr-30 font-size--28" v-if="addressPosition === 3">
        <p class="use-type-tip font-size--24 font-color-light-gray">使用方式</p>
        <div class="item item-address card jfk-mb-30" :class="{'is-checked': useType === '1', 'font-color-light-gray': useType === '2'}">
          <div :class="{'font-color-white': useType === '1'}" class="title jfk-flex is-align-middle" @click="handleChangeUseType('1')">
            <div class="jfk-flex cont is-justify-space-between">
              <span>
                <i class="jfk-font icon-mall_icon_orderDetail_post icon" :class="{'color-golden': useType === '1'}"></i>直接邮寄</span>
              <span class="jfk-radio jfk-radio--shape-circle color-golden">
                <label class="jfk-radio__label">
                  <input type="radio" name="type" :checked="useType === '1'" value="1" v-model="useType" />
                  <span class="jfk-radio__icon">
                    <i class="jfk-font icon-radio_icon_selected_default jfk-radio__icon-icon"></i>
                  </span>
                </label>
              </span>
            </div>
          </div>
          <transition name="fade">
            <div v-show="useType === '1'" class="address body tip" @click="handleChangeAddress">
              <div class="add font-color-extra-light-gray font-size--28 jfk-flex is-align-middle is-justify-center" v-if="addressId === '-1'">
                <span class="cont">
                  <i class="icon color-golden">+</i>新增收货地址
                </span>
              </div>
              <div class="list jfk-flex is-align-middle" v-else>
                <div class="cont">
                  <div class="list-item">
                    <span class="label font-size--24 font-color-extra-light-gray label--word-3">收件人</span>
                    <div class="item-cont font-size--28 font-color-white">
                      <span class="contact">{{addressPicked.contact}}</span>
                      <span class="phone">{{addressPicked.phone}}</span>
                    </div>
                  </div>
                  <div class="list-item">
                    <span class="label font-size--24 font-color-extra-light-gray">收件地址</span>
                    <div class="item-cont font-size--28 font-color-white">{{addressPickedDetail}}</div>
                  </div>
                  <i class="jfk-font icon-user_icon_jump_normal font-color-extra-light-gray font-size--24 list-icon"></i>
                </div>
              </div>
            </div>
          </transition>
        </div>
        <div class="item item-gift card" :class="{'is-checked': useType === '2', 'font-color-light-gray': useType === '1'}">
          <div :class="{'font-color-white': useType === '2'}" class="title jfk-flex is-align-middle" @click="handleChangeUseType('2')">
            <div class="jfk-flex cont is-justify-space-between">
              <span>
                <i class="jfk-font icon-user_icon_Polite_nor icon" :class="{'color-golden': useType === '2'}"></i>赠送他人</span>
              <span class="jfk-radio jfk-radio--shape-circle color-golden">
                <label class="jfk-radio__label">
                  <input type="radio" name="type" value="2" :checked="useType === '2'" v-model="useType" />
                  <span class="jfk-radio__icon">
                    <i class="jfk-font icon-radio_icon_selected_default jfk-radio__icon-icon"></i>
                  </span>
                </label>
              </span>
            </div>
          </div>
          <transition name="fade">
            <div class="tip jfk-flex is-align-middle jfk-pr-30 font-color-light-gray body font-size--24" v-show="useType === '2'">
              <div class="box jfk-pos-r">
                <i class="tip-icon font-size--22">?</i>下单后，购买成功，将礼物打包赠转发给好友，好友点击即可成功领取
              </div>
            </div>
          </transition>
        </div>
      </div>
      <div class="order-info jfk-pl-30 jfk-pr-30">
        <form class="jfk-form font-size--28">
          <div class="form-item gift-only" v-if="addressPosition === 2">
            <span class="form-item__label font-color-extra-light-gray">使用方式</span>
            <div class="form-item__body">
              <span @click="handleShowGiftOnly">
                <i class="jfk-d-ib font-color-white">赠送他人</i>
                <i class="gift-icon font-size--22 font-color-extra-light-gray jfk-d-ib">?</i>
              </span>
            </div>
          </div>
          <div class="form-item">
            <span class="form-item__label font-color-extra-light-gray">购买数量</span>
            <div class="form-item__body jfk-ta-r">
              <div class="count jfk-d-ib font-size--32">
                <jfk-input-number v-model="orderCount" :min="count.min" :max="count.limit"></jfk-input-number>
              </div>
            </div>
          </div>
          <div class="form-item">
            <label>
              <span class="form-item__label  font-color-extra-light-gray form-item__label--word-3">购买人</span>
              <div class="form-item__body">
                <input type="text" class="font-color-white" v-model="formItems.name.valule" placeholder="请输入购买人" />
              </div>
            </label>
          </div>
          <div class="form-item">
            <span class="form-item__label  font-color-extra-light-gray">联系方式</span>
            <div class="form-item__body">
              <input type="text" class="font-color-white" v-model="formItems.phone.value" placeholder="请输入购买人手机" />
            </div>
          </div>
          <div class="form-item form-item__select">
            <span class="form-item__label  font-color-extra-light-gray form-item__label--word-3">优惠券</span>
            <div @click="handleShowCoupons">
              <div class="form-item__body">
                <p class="tip" :class="couponsClass">{{couponsText}}</p>
              </div>
              <span class="form-item__foot">
                <i class="jfk-font icon-user_icon_jump_normal font-color-extra-light-gray"></i>
              </span>
            </div>
          </div>
          <div class="form-item form-item__switch">
            <span class="form-item__label  font-color-extra-light-gray">优惠活动</span>
            <div class="form-item__body">
              <p class="tip" :class="ruleClass">{{ruleText}}</p>
            </div>
            <div class="form-item__foot">
              <label class="jfk-switch color-golden font-size--30">
                <input type="checkbox" v-model="orderRulePicked" :disabled="orderRuleDisabled" class="jfk-switch__input" />
                <span class="jfk-switch__core"></span>
              </label>
            </div>
          </div>
          <div class="form-item">
            <span class="form-item__label  font-color-extra-light-gray">支付方式</span>
            <div class="form-item__body"></div>
          </div>
        </form>
        <div class="reserve-tip font-size--24">
          <i class="jfk-font icon-msg_icon_warning_no"></i>
          <div class="tip-title font-color-extra-light-gray">说明</div>
          <div class="tip-cont font-color-light-gray">商品超过有效期不能使用也不能退款</div>
        </div>
      </div>
      <footer class="footer jfk-clearfix">
        <div class="order-detail jfk-fl-l">
          <span class="price color-golden">
            <i class="price__currency font-size--24">¥</i>
            <i class="price__number font-size--48">{{pricePackage}}</i>
          </span>
          <span class="detail font-size--24 font-color-extra-light-gray">
            明细
          </span>
        </div>
        <div class="control jfk-fl-l">
          <button href="javascript:;" class="jfk-button font-size--34 jfk-button--higher jfk-button--free jfk-button--primary" v-html="buttonText"></button>
        </div>
      </footer>
    </div>
    <jfk-support></jfk-support>
    <template v-if="addressPosition === 1 || addressPosition === 3">
      <div class="page-address" v-show="addressLayerVisible">
        <div class="jfk-pages__theme"></div>
        <jfk-address :address.sync="address" :show-address-list="showAddressList" :addressId="addressId" @pick-address="handlePickAddress"></jfk-address>
      </div>
    </template>
    <template>
      <div class="page-coupons"  v-show="couponLayerVisible">
        <div class="jfk-pages__theme"></div>
        <jfk-coupons :items="coupons" :couponId="couponId" @coupon-picked="handlePickedCoupon"></jfk-coupons>
      </div>
    </template>
  </div>
</template>
<script>
  /* eslint-disable camelcase */
  import formatUrlParams from 'jfk-ui/lib/format-urlparams.js'
  import { showFullLayer, findIndex } from '@/utils/utils'
  import handleErrorStatus from '@/utils/handleErrorStatus'
  import axios from 'axios'
  import { getOrderPay, getPackageCoupons, getPackageRule } from '@/service/http'
  import JfkCoupons from './module/coupon.vue'
  const formatOrderRule = function (data) {
    const { activity = {}, asset = {} } = data
    if (activity.auto_rule.rule_type) {
      return activity.auto_rule
    } else if (asset.cal_rule.rule_type) {
      return asset.cal_rule
    }
    return null
  }
  export default {
    name: 'reverse',
    components: {
      'reverse-killsec-time': () => import('./module/killsec'),
      'jfk-address': () => import('../../components/address/main'),
      JfkCoupons
    },
    data: function () {
      const areaValidatorRequired = () => {
        if (this.addressPosition === 1 || this.addressPosition === 3) {
          return this.addressId !== '-1'
        }
        return true
      }
      const areaValidator = () => {
        if (this.addressPosition === 1 || this.addressPosition === 3) {
          let d = this.addressPicked
          return d.province && d.city && d.address && d.contact && d.phone && d.address
        }
        return true
      }
      const qtyValidator = () => {
        return this.orderCount > this.count.min && this.orderCount < this.count.max
      }
      return {
        productInfo: {},
        count: {
          min: 1
        },
        start: Date.now(),
        pspSetting: [],
        publicInfo: {},
        address: {},
        addressId: '-1',
        addressLayerVisible: false,
        lastRuleLoadedTimeStamp: Date.now(),
        showAddressList: 0,
        countdown: 0,
        coupons: [],
        orderRule: {},
        orderRulePicked: false,
        orderRuleDisabled: false,
        couponId: '-1',
        couponLayerVisible: false,
        orderCount: 0,
        rules: {
          qty: [{
            required: true, type: 'number', message: '请选择购买数量'
          }, {
            type: 'number', validator: qtyValidator, message: '购买数量有误'
          }],
          name: [{
            required: true, message: '请输入购买人'
          }, {
            max: 10, length: true, message: '购买人必须在10个字符内'
          }],
          phone: [{
            required: true, message: '请输入联系方式'
          }, {
            type: 'phone', message: '请输入正确的手机号码'
          }],
          area: [{
            validator: areaValidatorRequired, message: '请选择收件地址'
          }, {
            validator: areaValidator, message: '请填写完整的收件地址信息'
          }]
        },
        formItems: {
          qty: {
            value: 1
          },
          name: {
            value: ''
          },
          phone: {
            value: ''
          },
          coupon: {
            value: ''
          },
          activity: {
            value: ''
          },
          payType: {
            value: ''
          }
        },
        // 使用方式 1 邮寄  2 赠送
        useType: '1'
      }
    },
    computed: {
      couponDisabled () {
        if (this.productInfo.tag === 6) {
          return true
        }
        return false
      },
      buttonText () {
        return '立即支付'
      },
      pricePackage () {
        let price = this.productInfo.price_package * this.orderCount
        if (this.orderRule) {
          price = price - this.orderRule.reduce_cost
        }
        return price
      },
      // 地址显示位置 0 无邮寄无赠送 1 只邮寄  2 只赠送 3 能邮寄能赠送
      addressPosition () {
        const { can_mail, can_gift } = this.productInfo
        let pos = 0
        if (can_mail === '1') {
          pos = 1
        }
        if (can_gift === '1') {
          pos += 2
        }
        return pos
      },
      addressPicked () {
        const { address, addressId } = this
        let result = address.filter(function (d) {
          return d.address_id === addressId
        })
        return result[0]
      },
      addressPickedDetail () {
        const { provice_name = '', city_name = '', region_name = '', address = '' } = this.addressPicked
        return provice_name + city_name + region_name + address
      },
      productOtherHtml () {
        let limit = ''
        let result = ''
        // 如果是默认200，则不显示
        if (this.count.limit !== 200) {
          limit = '<span class="jfk-d-ib color-golden limit-tag font-size--22"><i>限购' + this.count.limit + '份</i></span>'
        }
        if (this.publicInfo.name) {
          result = '<div class="provide' + (limit && ' limit' || '') + '"><span class="jfk-d-ib font-color-light-gray">' + this.publicInfo.name + '提供</span>' + (limit || '') + '</div>'
        }
        if (this.pspSetting.length) {
          result += '<div class="spec' + (!result && limit && ' limit' || '') + '"><span class="font-color-light-gray jfk-d-ib">' + this.pspSetting[0].spec_name.join('<i class="line">|</i>') + '</span>' + (!result && limit || '') + '</div>'
        }
        if (!result && limit) {
          result += '<div class="limit">' + limit + '</div>'
        }
        return result
      },
      couponsClass () {
        return {
          'font-color-light-gray': this.couponId === '-1',
          'font-color-white': !this.couponDisabled && this.couponId !== '-1'
        }
      },
      couponsText () {
        if (this.couponDisabled) {
          return '暂无可用优惠券'
        } else if (this.orderRulePicked && this.orderRule.rule_type) {
          return '取消优惠活动可选择优惠券'
        } else if (this.coupons.length) {
          if (this.couponId !== '-1') {
            return this.couponPicked.title
          }
          return '请选择优惠券'
        } else {
          return '暂无可用优惠券'
        }
      },
      ruleClass () {
        return {
          'font-color-light-gray': !this.orderRulePicked,
          'font-color-white': this.orderRulePicked
        }
      },
      ruleText () {
        if (this.orderRule.rule_type) {
          if (this.orderRulePicked) {
            return this.orderRule.name + this.orderRule.reduce_cost
          }
          return '请选择优惠活动'
        } else {
          return '暂无优惠活动'
        }
      },
      couponPicked () {
        const { couponId } = this
        if (couponId !== '-1') {
          let index = findIndex(this.coupons, function (o) {
            return o.member_card_id === couponId
          })
          return this.coupons[index]
        }
        return {}
      }
    },
    methods: {
      handleChangeUseType (val) {
        this.useType = val
      },
      handlePickAddress (aid) {
        this.addressId = aid
        history.back(-1)
      },
      handleShowGiftOnly () {
        this.$jfkAlert('下单后，购买成功，将礼物打包赠转发给好友，好友点击即可成功领取')
      },
      handlePickedCoupon (val) {
        this.couponId = val
        history.back(-1)
      },
      handleShowCoupons () {
        if (!this.orderRulePicked && this.coupons.length) {
          this.couponLayerVisible = true
          const cb = () => {
            this.couponLayerVisible = false
          }
          showFullLayer(null, '立即购买', location.href, cb)
        }
      },
      handleChangeAddress () {
        this.addressLayerVisible = true
        // 强制渲染地址列表列表
        this.showAddressList = Date.now()
        const cb = () => {
          this.addressLayerVisible = false
        }
        showFullLayer(null, '立即购买', location.href, cb)
      },
      getOrderDiscount () {
        let that = this
        axios.all([
          getPackageCoupons({
            pid: this.productId,
            qty: this.orderCount,
            card_type: -1
          }),
          getPackageRule({
            pid: this.productId,
            qty: this.orderCount,
            stl: 'default',
            psp_sid: this.settingId
          })
        ]).then(axios.spread(function (coupons, rule) {
          that.lastRuleLoadedTimeStamp = Date.now()
          if (coupons.status === 1000) {
            that.coupons = coupons.web_data
          } else {
            that.coupons = []
          }
          if (rule.status === 1000) {
            let _rule = formatOrderRule(rule.web_data)
            if (_rule) {
              that.orderRule = Object.assign({}, that.orderRule, _rule)
              return
            }
          }
          that.$set(that, 'orderRule', {})
        })).catch(function (err) {
          that.coupons = []
          that.$set(that, 'orderRule', {})
          return handleErrorStatus(err)
        })
      },
      getOrderRule () {
        let that = this
        getPackageRule({
          pid: this.productId,
          qty: this.orderCount,
          stl: 'default',
          psp_sid: this.settingId
        }).then(function (res) {
          that.lastRuleLoadedTimeStamp = Date.now()
          let rule = formatOrderRule(res.web_data)
          if (rule) {
            that.orderRule = Object.assign({}, that.orderRule, rule)
          } else {
            that.$set(that, 'orderRule', {})
          }
        })
      }
    },
    beforeCreate () {
      let params = formatUrlParams(location.href)
      this.tokenId = params.token
      this.productId = params.pid
      this.settingId = params.psp_id
      this.btype = params.btype || ''
    },
    watch: {
      orderCount (val) {
        if (this.couponDisabled) {
          this.getOrderRule()
        } else {
          this.getOrderDiscount()
        }
      },
      lastRuleLoadedTimeStamp (val) {
        // 活动 > 积分  > 优惠券
        if (this.orderRule.rule_type) {
          this.orderRulePicked = true
          this.couponId = '-1'
          this.orderRuleDisabled = false
        } else {
          this.orderRuleDisabled = true
        }
      },
      orderRulePicked (val) {
        if (val) {
          this.couponId = '-1'
        }
      }
    },
    created () {
      let that = this
      // 获取订单信息
      getOrderPay({
        pid: this.productId,
        btype: this.btype,
        psp_id: this.settingId,
        token: this.tokenId
      }).then(function (res) {
        const { count, psp_setting, product, countdown, address, public_info } = res.web_data
        that.count = Object.assign({}, that.count, count)
        that.orderCount = count.default
        that.pspSetting = psp_setting
        that.countdown = countdown * 1000
        if (address.length) {
          that.address = address
          that.addressId = address[0].address_id
        }
        that.productInfo = Object.assign({}, that.productInfo, product)
        that.publicInfo = Object.assign({}, that.publicInfo, public_info)
      })
    }
  }
</script>
